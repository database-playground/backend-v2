extend type Query {
  me: User! @scope(scope: "me:read")

  """
  Get a user by ID.
  """
  user(id: ID!): User! @scope(scope: "user:read")

  """
  Get a group by ID.
  """
  group(id: ID!): Group! @scope(scope: "group:read")

  """
  Get a scope set by ID or slug.
  """
  scopeSet(filter: ScopeSetFilter!): ScopeSet! @scope(scope: "scopeset:read")
}

"""
Filter for scope sets.

The filters are mutually exclusive, only one of them can be provided.
"""
input ScopeSetFilter {
  """
  The ID of the scope set.
  """
  id: ID

  """
  The slug of the scope set.
  """
  slug: String
}

extend type User {
  """
  The user who impersonated this user.
  """
  impersonatedBy: User
}

extend type Mutation {
  """
  Update the information of the current user.
  """
  updateMe(input: UpdateUserInput!): User @scope(scope: "me:write")

  """
  Update the information of a user.
  """
  updateUser(id: ID!, input: UpdateUserInput!): User @scope(scope: "user:write")

  """
  Delete a user.
  """
  deleteUser(id: ID!): Boolean! @scope(scope: "user:write")

  """
  Create a new scope set.
  """
  createScopeSet(input: CreateScopeSetInput!): ScopeSet @scope(scope: "scopeset:write")
  """
  Update a scope set.
  """
  updateScopeSet(id: ID!, input: UpdateScopeSetInput!): ScopeSet @scope(scope: "scopeset:write")
  """
  Delete a scope set.
  """
  deleteScopeSet(id: ID!): Boolean! @scope(scope: "scopeset:write")

  """
  Create a new group.
  """
  createGroup(input: CreateGroupInput!): Group @scope(scope: "group:write")
  """
  Update a group.
  """
  updateGroup(id: ID!, input: UpdateGroupInput!): Group @scope(scope: "group:write")
  """
  Delete a group.
  """
  deleteGroup(id: ID!): Boolean! @scope(scope: "group:write")

  """
  Impersonate a user.

  Returns the token of the impersonated user.
  You can then use the token to access the user's resources.
  """
  impersonateUser(userID: ID!): String! @scope(scope: "user:impersonate")

  """
  Logout from all the devices of the current user.
  """
  logoutAll: Boolean! @scope(scope: "me:write")

  """
  Delete the current user.
  """
  deleteMe: Boolean! @scope(scope: "me:delete")

  """
  Verify the registration of this user.
  """
  verifyRegistration: Boolean! @scope(scope: "verification:write")
}
