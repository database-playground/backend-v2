// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"github.com/database-playground/backend-v2/ent/question"
	"github.com/database-playground/backend-v2/models"
)

type DatabaseStructure struct {
	Tables []*DatabaseTable `json:"tables"`
}

type DatabaseTable struct {
	Name    string   `json:"name"`
	Columns []string `json:"columns"`
}

// Filter for scope sets.
//
// The filters are mutually exclusive, only one of them can be provided.
type ScopeSetFilter struct {
	// The ID of the scope set.
	ID *int `json:"id,omitempty"`
	// The slug of the scope set.
	Slug *string `json:"slug,omitempty"`
}

type SolvedQuestionByDifficulty struct {
	Difficulty      question.Difficulty `json:"difficulty"`
	SolvedQuestions int                 `json:"solvedQuestions"`
}

type SubmissionResult struct {
	Result *models.UserSQLExecutionResult `json:"result,omitempty"`
	Error  *string                        `json:"error,omitempty"`
}

type SubmissionStatistics struct {
	TotalQuestions             int                           `json:"totalQuestions"`
	AttemptedQuestions         int                           `json:"attemptedQuestions"`
	SolvedQuestions            int                           `json:"solvedQuestions"`
	SolvedQuestionByDifficulty []*SolvedQuestionByDifficulty `json:"solvedQuestionByDifficulty"`
}
